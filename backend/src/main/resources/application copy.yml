# Application Server
server : 
    port : 3000
    # Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
    # servlet:
    #       encoding:
    #               charset: UTF-8
    # # Enable http encoding support.
    # servlet:
    #       encoding:
    #               enabled: true
    # # Force the encoding to the configured charset on HTTP requests and responses.
    # servlet:
    #       encoding:
    #               force: true

# Logbook: HTTP request and response logging
logging:
      level:
        org:
          zalando:
            logbook : TRACE
             

spring:
    # address : 192.168.56.215
    datasource:
        url: jdbc:mysql://localhost:3306/spring_social?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
        username: root
        password: 

    jpa:
        open-in-view : false
        show-sql: true
        hibernate:
            # ddl-auto: create # Drop create table again, good for testing, comment this in production
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    security:
      uri:
          # URI without authenticated
          white-list : /api/v1/auth/**
          # false if you work with session
      disable :
          csrf : true
      
      # Pendiente actualizar para producción
      cors:
          allowed:
              origins: "* ,http://test.com"
      oauth2:
        client:
          registration:
            google:
              clientId: 281298393658-k5skh9400nib145gu6gk7lhf73q8jnb5.apps.googleusercontent.com
              clientSecret: LV44Fhbz6aTE8fz1byhZDt5e
              redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 850723448696431
              clientSecret: 5ec5252243a3ea0c21d0795509475956
              redirect-uri : "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId: 1fe8cadbc5f9d68da253
              clientSecret: b7bed083e3f1333ddf337968bba42633adb1bc0e
              redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
              # scope:
              #   - user:email
              #   - read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)      
    mail:
      host: smtp.gmail.com
      port: 587
      properties:
        mail:
          smtp:
            auth: true
            starttls:
              enable: true
      # properties:
      #   mail:
      #     smtp:
      #       starttls:
      #         enable: true
      #         required: true
      #       auth: true
      #       connectiontimeout: 5000
      #       timeout: 5000
      #       writetimeout: 5000
      username: cheigeurdeidine@gmail.com
      password: hjhj
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://192.168.56.215:4200/oauth2/redirect
      - http://localhost:4200/oauth2/redirect
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
security:
  uri:
      # URI without authenticated
      white-list : /api/v1/auth/**
      # false if you work with session
  disable :
      csrf : true
  
  # Pendiente actualizar para producción
  cors:
      allowed:
          origins: "* ,http://test.com"
# notification:
#       email:
#         enabled: true
# notification:
#       sms:
#         enabled: false
# spring.datasource.tomcat.initial-size=15
# spring.datasource.tomcat.min-idle=15
# spring.datasource.tomcat.max-active=50
# spring.datasource.tomcat.max-idle=50
# spring.datasource.tomcat.min-evictable-idle-time-millis=60000
# spring.datasource.tomcat.max-wait=20000
