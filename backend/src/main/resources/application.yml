security:
  uri:
      # URI without authenticated
      white-list : /api/v1/auth/**
      # false if you work with session
  disable :
      csrf : true
   
  # Pendiente actualizar para producci√≥n
  cors:
      allowed:
           origins: "http://localhost:4200"
# Logbook: HTTP request and response logging
logging:
      level:
        org:
          zalando:
            logbook : TRACE
             

# server : 
#     port : 3000
    # Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
    # servlet:
    #       encoding:
    #               charset: UTF-8
    # # Enable http encoding support.
    # servlet:
    #       encoding:
    #               enabled: true
    # # Force the encoding to the configured charset on HTTP requests and responses.
    # servlet:
    #       encoding:
    #               force: true

spring:
    # address : 192.168.56.215
    datasource:
        url: jdbc:mysql://localhost:3306/spring_social?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
        username: root
        password: 

    jpa:
        show-sql: true
        hibernate:
            # ddl-auto: create
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect

    security:
      oauth2:
      # https://console.cloud.google.com/apis/credentials?project=qgis-389317
      # https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/google/#:~:text=Configure%20Google%20OAuth2%20authentication%201%20Create%20Google%20OAuth,Available%20in%20Grafana%20v10.2.0%20and%20later%20versions.%20
        client:
          registration:
            google:
            # https://console.cloud.google.com/apis/credentials?project=qgis-389317
              clientId: 288908106307-v4c96gqaqi5ifdjp5uevqtaej99qpk1d.apps.googleusercontent.com
              clientSecret: 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
              redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 850723448696431
              clientSecret: 5ec5252243a3ea0c21d0795509475956
              redirect-uri : "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId: 1fe8cadbc5f9d68da253
              clientSecret: 8bdcb174d944ca2c67b7da01ba8612d089ab49ce
              redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - user:email
                - user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)      
    mail:
      host: smtp.gmail.com
      port: 587
      properties:
        mail:
          smtp:
            auth: true
            starttls:
              enable: true
      # properties:
      #   mail:
      #     smtp:
      #       starttls:
      #         enable: true
      #         required: true
      #       auth: true
      #       connectiontimeout: 5000
      #       timeout: 5000
      #       writetimeout: 5000
      username: cheigeurdeidine@gmail.com
      password: hjhj
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
    cors:
        allowedOrigins: http://localhost:4200,http://localhost:8080
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:4200/oauth2/redirect
      - http://192.168.56.215:4200/oauth2/redirect
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
      